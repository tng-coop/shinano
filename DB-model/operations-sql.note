-- -*- SQL -*-

-- * user
--    * add user
--    * delete user
-- * job listing
--     * define job listing
--         * (puiblication range : optional)
--     * open job listing
--     * close job listing
--     * view job listing
-- * job seeking
--     * define job seeking
--         * (puiblication range : optional)
--     * open job seeking
--     * close job seeking
--     * view job seeking
-- * login / logout

-- -----------------------------------------
-- user

-- add user
--   2 examples
SET @name = 'Jhon Smith', @email = 'mail@piyomail.com', @passwd_hash = 'hsah_dwssap', @note = 'Hi! this is my note'; -- params
--
START TRANSACTION;

INSERT INTO user(name, email, passwd_hash, note, created_at, updated_at)
       VALUES (@name, @email, @passwd_hash, @note, current_timestamp, current_timestamp);

COMMIT;
-- --------
SET @name = 'Tony Morris', @email = 'tony@morris.com', @passwd_hash = 'hsah_dwssap', @note = 'Tony''s note example'; -- params
--
START TRANSACTION;

INSERT INTO user(name, email, passwd_hash, note, created_at, updated_at)
       VALUES (@name, @email, @passwd_hash, @note, current_timestamp, current_timestamp);

COMMIT;

-- -----------------------------------------
-- job listing

-- define job listing
--   2 candidates
SET @email = 'mail@piyomail.com', @title = 'Jhon job listing', @description = 'example job description 1'; -- params
-- Two stmt transaction
START TRANSACTION;

SELECT @user_id := id FROM user WHERE email = @email FOR UPDATE;
INSERT INTO job_entry(attribute, user, title, description, created_at, updated_at)
       VALUES ('L', @user_id, @title, @description, current_timestamp, current_timestamp);

COMMIT;
-- --------
SET @email = 'tony@morris.com', @title = 'Tony job listing', @description = 'example job description 2'; -- params
-- One INSERT ... SELECT stmt
START TRANSACTION;

INSERT INTO job_entry(attribute, user, title, description, created_at, updated_at)
       SELECT 'L', U.id, @title, @description, current_timestamp, current_timestamp FROM user AS U WHERE U.email = @email;

COMMIT;

-- open job listing
--   2 candidates
SET @email = 'tony@morris.com', @job_entry_id = 2;
-- Two stmt transaction
START TRANSACTION;

SELECT @user_id := U.id FROM user AS U WHERE U.email = @email FOR UPDATE;
UPDATE job_entry AS J SET opened_at = current_timestamp
       WHERE attribute = 'L' AND id = @job_entry_id AND user = @user_id;

COMMIT;
-- --------
SET @email = 'mail@piyomail.com', @job_entry_id = 1;
-- One UPDATE statement uses a correlation query to specify a specific user from email
START TRANSACTION;

UPDATE job_entry AS J SET opened_at = current_timestamp
       WHERE attribute = 'L' AND id = @job_entry_id
       AND user = (SELECT U.id FROM user AS U WHERE U.email = @email);

COMMIT;


-- close job listing
--   2 candidates of transaction sequence
SET @email = 'tony@morris.com', @job_entry_id = 2;
-- Two stmt transaction
START TRANSACTION;

SELECT @user_id := U.id FROM user AS U WHERE U.email = @email FOR UPDATE;
UPDATE job_entry AS J SET closed_at = current_timestamp
       WHERE attribute = 'L' AND id = @job_entry_id AND user = @user_id;

COMMIT;
-- --------
SET @email = 'mail@piyomail.com', @job_entry_id = 1;
-- The UPDATE statement uses a correlation query to specify a specific user from email
START TRANSACTION;

UPDATE job_entry SET closed_at = current_timestamp
       WHERE attribute = 'L' AND id = @job_entry_id
       AND user = (SELECT U.id FROM user AS U WHERE U.email = @email);

COMMIT;

-- view job listing
--   2 example
SET @email := 'mail@piyomail.com';
-- specify set
SELECT U.name, J.title, J.description, J.created_at, J.updated_at, J.opened_at, J.closed_at
       FROM user as U INNER JOIN job_entry AS J
       ON U.id = J.user
       WHERE attribute = 'L' AND U.email = @email;
-- --------
-- sepecify set and order
SELECT U.name, J.title, J.description, J.created_at, J.updated_at, J.opened_at, J.closed_at
       FROM user as U INNER JOIN job_entry AS J
       ON U.id = J.user
       WHERE attribute = 'L' AND U.email = @email
       ORDER BY opened_at IS NULL ASC, created_at ASC;
